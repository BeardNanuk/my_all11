#!/usr/bin/env python

# Specialized script used to visualize seismic section.

import argparse

from obspy import read
import matplotlib.pyplot as plt

from seisflows.tools.graphics import plot_vector, plot_section

import numpy as np

# added on Fri May 24 11:48:04 EDT 2019
from my_sfs.ze_seisflows import parse_args 

import prusct.io.read_data as rd
from my_sfs.ze_plot_section import plot_section_steps




if __name__ == "__main__":

    args = parse_args()
    execfile('zfuncfolder/zconstants.py')
    if args.clip < 0:
        args.clip = 0
    elif args.clip > 100:
        args.clip = 100
    # register parameters
    #parameters = loadpy(args.parameter_file)
    #sys.modules['seisflows_parameters'] = Dict(parameters)
    #PAR = sys.modules['seisflows_parameters']
    print('PAR.NT', PAR.NT)
    
    idir = args.file
    #idir = "/DATA/obs/000000/Up_file_single.su" 
    #idir = "./scratch/solver/000000/traces/adj/Up_file_single.su.adj" 
    data2dnp=rd.readebsu(idir=idir,t_total = PAR.NT,NREC=PAR.NREC)
    #data2dnp=rd.readebsu(idir=idir,t_total = t_total,NREC=NREC)
    clip=100
    
    plot_section_steps(data=data2dnp, clip=clip, y_star = 0, y_end=PAR.NT, title=' seismo', y_interval=yintsyn, fig_filename='sismo.png',flag_savepng='1')

    #stream = read(args.file, format='SU', byteorder='<')
    #plot_section(stream,
    #             cmap=args.cmap,
    #             clip=(100-args.clip),
    #             title=args.title,
    #             x_interval=args.x_interval,
    #             y_interval=args.y_interval)
    #plt.show()
    plt.savefig(args.save)



